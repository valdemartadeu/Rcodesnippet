##Subsetting - quick review
set.seed(13435)
X <- data.frame("var1"=sample(1:5), "var2"=sample(6:10),"var3"=sample(11:15))
X <- X[sample(1:5),];X$var2[c(1,3)]=NA
X

#Specific column 
X[,1]

#Specific column with name
X[,"var1"]

#First two rows of the second column
X[1:2,"var2"]

#Logical statements 

#All the rows where var1 is less then three AND is greater than 11
X[X$var1 <= 3 & X$var3>11,]

#All the rows where var1 is less then three OR is greater than 11
X[(X$var1 <=3 | X$var3>15,]

#Dealing with missing values -- which commands.
X[which(X$var2>8),]

#Sorting
sort(X$var1)

sort(X$var1, decreasing = TRUE

#Sorting and putting the NA values at the end
sort(X$var2, na.last = TRUE

#Ordering
X[order(X$var1),]
X[order(X$var1,X$var3),]

#Ordering with plyr
library(plyr)
arrange(X,var1) #X is the data set, var1 is the variable that sorts.
arrange(X, desc(var1))

#Adding rows and columns

#manner1
X$var4 <-rnorm(5) #adicionei uma nova coluna, var4, com vetor randomico de 5 valores.
X

#manner2
Y<-cbind(X,rnorm(5)) #column bind
Y

#binding rows
rbind

#Notes http://www.biostat.jhsph.edu/~ajaffe/lec_winterR/Lecture%202.pdf

#Summarizing Data

#dataset restaurants baltimore - https://data.baltimorecity.gov/Community/Restaurants/k5ry-ef3g

#Getting the data from web
if(!file.exists("./data")){dir.create("./data")}
fileUrl <- "https://data.baltimorecity.gov/api/views/k5ry-ef3g/rows.csv?accessType=DOWNLOAD"
download.file(fileUrl,destfile="./data/restaurants.csv",method="curl")
restData <- read.csv("./data/restaurantes.csv")

#look at a bit of the data
head(resData, n=3) #show the top three rows

tail(resData, n=3) #show the bottom part of the dataset

#make summary
summary(resData)

#More in depth information

str(resData) #more information about data.frame

#quantiles of quantiative variables

quantile(resData$councilDistric.na.rm=TRUE)

quantile(resData$councilDistrict, probs = c(0.5,0.75,0.9))

#Make table -- look at specific variables and make a table

table(restData$zipCode,useNA = "ifany") #useNa="ifany" -- if any.

#Two dimensional tables

table(restData$councilDistrict, restData$zipCode)

#Checking for missing values
sum(is.na(restData$councilDistrict)) 

any (is.na(restData$councilDistrict))

all(restData$zipCode >0) #check if every single value satisfies the condition

#row and column sums
colSums (is.na(restData))

all(colSums(is.na(restData))==0)

#Values with specific characteristics
table(restData$zipCode %in% c("21212")) #wanna find all the zip codes that are equal (==) to 212121 or if there is any value (%in%)

table(restData$zipCode %in% c("21212","21213")) #are any zip code either 212121 and 21213

#Values with specific characteristics 

restData[restData$zipCode %in% c("21212","21213"),] #new data set with only the rows that satisfies the condition.

#Cross tabs

data(UCBAdmissions)
DF = as.data.frame(UCBAdmissions)
summary(DF)

xt <- xtabs(Freq ~ Gender + Admit, data=DF)
xt

#Flat tables --- value and break down
warpbreaks$replicate <-rep(1:9, len = 54)
xt=xtabs(breaks ~.,data=warpbreaks)
xt

ftable(xt) #compact form

#Size of a data set
fakeData = rnorm(1e5)
object.size(fakeData)
print(object.size(fakeData),units="Mb")
















